package se.liu.ida.hefquin.engine.vocabulary;

/* CVS $Id: $ */
 
import org.apache.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from engineconf.ttl 
 * @author Auto-generated by schemagen on 24 Sep 2024 15:27 
 */
public class ECVocab {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static final Model M_MODEL = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://w3id.org/hefquin/engineconf#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = M_MODEL.createResource( NS );
    
    /** <p>Specifies the full name of a Java class or of a Java interface.</p> */
    public static final Property argumentTypeName = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#argumentTypeName" );
    
    /** <p>Specifies the list of arguments that must be passed to the constructor of 
     *  the Java class. Every element of this list is expected to be of type 'ConstructorArgument'.</p>
     */
    public static final Property constructorArguments = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#constructorArguments" );
    
    /** <p>Specifies the cost model to be used by the query processor. This property 
     *  is optional because not all configurations of the HeFQUIN query processor 
     *  use a cost model.</p>
     */
    public static final Property costModel = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#costModel" );
    
    /** <p>Specifies the elements to be included in a list that is created as an argument 
     *  for the constructor of a Java class. Every element of this list is expected 
     *  to be of type 'InstantiableJavaClass'.</p>
     */
    public static final Property elements = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#elements" );
    
    /** <p>Specifies the full name of a Java class or of a Java interface.</p> */
    public static final Property elementsTypeName = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#elementsTypeName" );
    
    /** <p>Specifies the execution engine to be used by the query processor.</p> */
    public static final Property executionEngine = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#executionEngine" );
    
    /** <p>Specifies the federation access manager to be used in a configuration of the 
     *  HeFQUIN engine. Every such configuration has only one federation access manager.</p>
     */
    public static final Property fedAccessMgr = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#fedAccessMgr" );
    
    /** <p>Specifies the full name of a Java class.</p> */
    public static final Property javaClassName = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#javaClassName" );
    
    /** <p>Specifies the logical optimizer to be used by the query planner.</p> */
    public static final Property logicalOptimizer = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#logicalOptimizer" );
    
    /** <p>Specifies the physical optimizer to be used by the query planner.</p> */
    public static final Property physicalOptimizer = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#physicalOptimizer" );
    
    /** <p>Specifies the plan compiler to be used by the query processor.</p> */
    public static final Property planCompiler = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#planCompiler" );
    
    /** <p>Specifies the query planner to be used by the query processor.</p> */
    public static final Property queryPlanner = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#queryPlanner" );
    
    /** <p>Specifies the query processor to be used in a configuration of the HeFQUIN 
     *  engine. Every such configuration has only one query processor.</p>
     */
    public static final Property queryProcessor = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#queryProcessor" );
    
    /** <p>Specifies the source planner to be used by the query planner.</p> */
    public static final Property sourcePlanner = M_MODEL.createProperty( "http://w3id.org/hefquin/engineconf#sourcePlanner" );
    
    /** <p>This class is a superclass of any kind of argument to be passed to the constructor 
     *  of a corresponding Java class. Concrete types of arguments are captured by 
     *  the subclasses of this class.</p>
     */
    public static final Resource ConstructorArgument = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#ConstructorArgument" );
    
    public static final Resource CostModel = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#CostModel" );
    
    /** <p>The instances of this class that are defined in this vocabulary can be referred 
     *  to as values by a 'ValueBasedConstructorArgument'.</p>
     */
    public static final Resource DesignatedArgumentValue = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DesignatedArgumentValue" );
    
    public static final Resource ExecutionEngine = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#ExecutionEngine" );
    
    public static final Resource FederationAccessManager = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#FederationAccessManager" );
    
    /** <p>Class of configurations of the HeFQUIN engine. Instances of this class must 
     *  have exactly one 'fedAccessMgr' property and one 'queryProcessor' property.</p>
     */
    public static final Resource HeFQUINEngineConfiguration = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#HeFQUINEngineConfiguration" );
    
    /** <p>Every instance of this class represents a Java class that can be instantiated 
     *  based on the given RDF description. Instances of this class must have exactly 
     *  one 'javaClassName' property. Additionally, they may have a 'constructorArguments' 
     *  property.</p>
     */
    public static final Resource InstantiableJavaClass = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#InstantiableJavaClass" );
    
    /** <p>Every instance of this class represents a Java object that is obtained by 
     *  instantiating a Java class and that is meant to be passed to a constructor 
     *  in order to instantiate another Java class. In addition to the 'javaClassName' 
     *  property and the (optional) 'constructorArguments' property, every instance 
     *  of this class must have exactly one 'argumentTypeName' property. The value 
     *  of this property is either the same as the value of the 'javaClassName' property 
     *  or it is the name of a superclass or an interface of the class mentioned by 
     *  the 'javaClassName' property.</p>
     */
    public static final Resource InstantiationBasedConstructorArgument = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#InstantiationBasedConstructorArgument" );
    
    /** <p>Every instance of this class represents a 'java.util.List' that is populated 
     *  and then passed as an argument to the constructor of a corresponding Java 
     *  class. Instances of this class must have exactly one 'elementsTypeName' property 
     *  and exactly one 'elements' property. Each element of the 'rdf:List' that the 
     *  latter property refers to is expected to be of type 'InstantiableJavaClass' 
     *  and the values of their respective 'javaClassName' properties are expected 
     *  to be either the same as the value of the 'elementsTypeName' property (of 
     *  this 'ListBasedConstructorArgument') or the name of a sub-class of the class 
     *  mentioned by the 'elementsTypeName' property.</p>
     */
    public static final Resource ListBasedConstructorArgument = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#ListBasedConstructorArgument" );
    
    public static final Resource LogicalOptimizer = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#LogicalOptimizer" );
    
    public static final Resource PhysicalOptimizer = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#PhysicalOptimizer" );
    
    public static final Resource PlanCompiler = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#PlanCompiler" );
    
    /** <p>Instances of this class must have exactly one 'sourcePlanner' property, one 
     *  'logicalOptimizer' property, one 'physicalOptimizer' property.</p>
     */
    public static final Resource QueryPlanner = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#QueryPlanner" );
    
    /** <p>Instances of this class must have exactly one 'queryPlanner' property, one 
     *  'planCompiler' property, one 'executionEngine' property. Additionally, they 
     *  may have a 'costModel' property.</p>
     */
    public static final Resource QueryProcessor = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#QueryProcessor" );
    
    public static final Resource SourcePlanner = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#SourcePlanner" );
    
    /** <p>Every instance of this class refers to a concrete value to be passed as an 
     *  argument to the constructor of a corresponding Java class. In particular, 
     *  to refer to this value, instances of this class must have exactly one 'rdf:value' 
     *  property. The value may be either a literal or any 'DesignatedArgumentValue' 
     *  defined in this vocabulary.</p>
     */
    public static final Resource ValueBasedConstructorArgument = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#ValueBasedConstructorArgument" );
    
    public static final Resource DefaultCostModel = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DefaultCostModel" );
    
    public static final Resource DefaultExecutionEngine = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DefaultExecutionEngine" );
    
    public static final Resource DefaultFederationAccessManager = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DefaultFederationAccessManager" );
    
    public static final Resource DefaultLogicalOptimizer = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DefaultLogicalOptimizer" );
    
    public static final Resource DefaultPhysicalOptimizer = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DefaultPhysicalOptimizer" );
    
    public static final Resource DefaultPlanCompiler = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DefaultPlanCompiler" );
    
    public static final Resource DefaultSourcePlanner = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#DefaultSourcePlanner" );
    
    public static final Resource CostModel_INSTANCE = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#value:CostModel" );
    
    public static final Resource ExecServiceForFedAccess = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#value:ExecServiceForFedAccess" );
    
    public static final Resource QueryProcContext = M_MODEL.createResource( "http://w3id.org/hefquin/engineconf#value:QueryProcContext" );
    
}
